#!/sbin/openrc-run
# Copyright 1999-2014 Gentoo Foundation
# Distributed under the terms of the 2-clause BSD or GPL-2 license
# $Header: mkinitramfs-ll/svc/zram.initd,v 1.3 2014/09/30 13:05:23 -tclover Exp $

conf_file=/etc/conf.d/${RC_SVCNAME}
description="set up zram devices and initialize zram if necessary"

depend()
{
	before bootmisc acpid
}

start()
{
	[ "x$zram_init" == "xyes" ] && zram_init
	
	local dev fsys mtpt num=0 opt ret
	for dev in $(sed -nre 's/^zram_device=(.*$)/\1/p' $conf_file); do
		[ -b /dev/zram$num ] || break
		fsys=$(echo "$dev" | cut -d: -f2 -s)
		mtpt=$(echo "$dev" | cut -d: -f3 -s)
		mopt=$(echo "$dev" | cut -d: -f4 -s)
		mode=$(echo "$dev" | cut -d: -f5 -s)
		[ -n" $fsys" ] || continue
		
		if [ "x$fsys" == "xswap" ]; then
			mkswap /dev/zram$num && swapon
		else
			mkfs -t $fsys /dev/zram$num 2>/dev/null
			ret=$?
			eend "$ret" "failed to formate zram$num to $fsys"
			[ "x$ret" == "x0" ] || continue
			if [ -n "$mtpt" ]; then
				[ -d "$mtpt" ] || mkdir -p $mtpt
				mount -t $fsys ${mopt:+-o $mopt} /dev/zram$num $mtpt
				eend "$?" "failed to mount /dev/zram$num to $mtpt"
				[ -n "$mode" ] || chmod $mode $mtpt
			fi
		fi
		num=$(expr $num + 1)
	done

	return 0
}

zram_init()
{
	local dev num=0 size
	if grep -q zram /proc/modules; then
		if ! rmmod zram >/dev/null 2>&1; then
			eend "$?" "failed to remove zram kernel module"
			return 1
		fi
	fi

	if ! modprobe zram num_devices=${num_devices:-4} >/dev/null 2>&1; then
		eend "$?" "failed to initialize zram kernel module"
		return 2
	fi

	for dev in $(sed -nre 's/^zram_device=(.*$)/\1/p' $conf_file); do
		[ -b /dev/zram$num ] || break
		size=${dev%%:*}
		echo $size > /sys/block/zram$num/disksize
		num=$(expr $num + 1)
	done
}

#
# vim:fenc=utf-8:ft=gentoo-init-d:ci:pi:sts=0:sw=4:ts=4:
#
