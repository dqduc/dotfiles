#!/sbin/runscript
# Copyright 1999-2014 Gentoo Foundation
# Distributed under the terms of the 2-clause BSD or GPL-2 license
# $Header: /etc/init.d/zram,v 1.0 2014/07/26 13:05:23 -tclover Exp $

conf_file="/etc/conf.d/${SVCNAME}"
description="set up zram devices and initialize zram if necessary"

depend() {
        need localmount
        before bootmisc acpid
}

start() {
	[ "x$zram_init" == "xyes" ] && zram_init
	
	local dev fsys mtpt num=0 opt ret
	for dev in $(grep -E '^zram_device=' $conf_file); do
		[ -b /dev/zram$num ] || break
		dev=${dev##*=}
		fsys=$(echo "$dev" | cut -d: -f2 -s)
		mtpt=$(echo "$dev" | cut -d: -f3 -s)
		[ -n" $fsys" ] || continue
		
		if [ "x$fsys" == "xswap" ]; then
			mkswap /dev/zram$num && swapon
		else
			mkfs -t $fsys /dev/zram$num #2>/dev/null
			ret=$?
			eend "$ret" "failed to formate zram$num to $fsys"
			[ "x$ret" == "x0" ] || continue
			if [ -n "$mtpt" ]; then
				[ "x$mtpt" == "x/tmp" ] && opt="-m1777" || opt=
				[ -d "$mtpt" ] || mkdir -p $opt $mtpt
				mount -t $fsys /dev/zram$num $mtpt
				eend "$?" "failed to mount /dev/zram$num to $mtpt"
			fi
		fi
		num=$(expr $num + 1)
	done

	return 0
}

zram_init() {
	local dev num=0 size
	if grep zram /proc/modules >/dev/null 2>&1; then
		rmmod zram
		eend "$?" "failed to unload zram module"
	fi

	modprobe zram num_devices=${num_devices:-4}
	eend "$?" "failed to initialize zram"
	for dev in $(grep -E '^zram_device=' $conf_file); do
		dev=${dev##*=}
		[ -b /dev/zram$num ] || break
		size=${dev%%:*}
		echo $size > /sys/block/zram$num/disksize
		num=$(expr $num + 1)
	done
}

# vim:fenc=utf-8:ft=gentoo-init-d:ci:pi:sts=0:sw=4:ts=4:"
