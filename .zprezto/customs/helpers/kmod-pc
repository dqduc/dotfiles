#
# .zprezto/customs/functions/kmp-cp
#

function kmod-pc {
	(( $+functions[colors] ))   || autoload -Uz colors 
	(( $+functions[terminfo] )) || autoload -Uz zsh/terminfo
	if [[ $terminfo[colors] -ge 8 ]] { colors }
	local reset="$terminfo[sgr0]"
	local newline='
'

	local d line m mc md mod n=/dev/null
	if (( $# > 0 )) {
		mod=($*)
	} else {
		while read line
		do
			mod+=($line[(w)1])
		done </proc/modules
	}

	for m (${mod[@]})
	{
		md=/sys/module/$m/parameters
		if [[ ! -d $md ]] { continue }
		d=${$(modinfo -d $m 2>$n)//\\n/\\t}
		print -P "$fg[green]'-*- '$m$fg[none]: $d"

		declare -a pnames pdescs pvals
		local add_desc=false p pdesc pname pval
		while IFS="$newline" read p
		do
			if [[ $p =~ ^[[:space:]] ]] {
				pdesc+="$newline	$p"
			} else {
				$add_desc && pdescs+=($pdesc)
				pname=${p%%:*}
				pnames+=($pname)
				pdesc=(${p#*:})
				pval="$(cat $md/$pname 2>$n | sed -e 's/(null),//g' -e 's/-1,//g' \
					-e 's/Y,//g' -e 's/0,//g')"
				pvals+=($pval)
			}
			add_desc=true
		done < <(modinfo -p $m 2>$n)

		$add_desc && pdescs+=($pdesc)
		for ((i=1; i<${#pnames[@]}; i++)) {
			print -P "\t$fg[cyan]${pnames[i]}$reset = $fg[yellow]${pvals[i]}$reset - ${pdescs[i]}"
		}
	}
}

if [[ ${(%):-%1x} == kmod-pc(.zsh) ]] {
	kmod-pc "$@"
}

#
# vim:fenc=utf-8:ft=zsh:ci:pi:sts=0:sw=2:ts=2:
#
